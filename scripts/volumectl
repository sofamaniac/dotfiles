#!/usr/bin/env bash

set -euo pipefail

MICROPHONE="@DEFAULT_AUDIO_SOURCE@"
SPEAKER="@DEFAULT_AUDIO_SINK@"

Help() {
  echo "Control the volume of the speaker and microphone."
  echo
  echo "Usage:"
  echo "  $(basename "$0") (mic|vol) <command>"
  echo "  $(basename "$0") --help"
  echo
  echo "Commands:"
  echo "  get         print the current volume as a number between 0 and 100, is called by default if no command is provided"
  echo "  set <val>   set the volume to the specified value (a number between 0 and 100)"
  echo "  mute        toggle mute on the target"
}

GetVolume() {
  local volume
  volume=$(wpctl get-volume $TARGET | cut -d ' ' -f 2)
  volume=$(echo "$volume" | awk '{pcts = $0 * 100; print pcts}' -)
  echo "$volume"
}

SetVolume() {
  local target_vol
  target_vol=$(echo "$1" | awk '{target = $0 - ($0 %5); print target/100}' -)
  wpctl set-volume $TARGET "$target_vol" --limit 1
}

PARSED="$(getopt --options=h --longoptions=help --name="$0" -- "$@")"
eval set -- "$PARSED"

while true; do
  case "$1" in
  -h | --help)
    Help
    exit 0
    ;;
  --)
    shift 1
    break
    ;;
  *)
    echo "Programming error"
    exit 3
    ;;
  esac
done

TARGET=
case "${1:-}" in
mic)
  TARGET=$MICROPHONE
  shift 1
  ;;
vol)
  TARGET=$SPEAKER
  shift 1
  ;;
"")
  echo "Expected target, see --help for how to use command"
  exit 1
  ;;
*)
  echo "Unknown target '$1', see --help for more information"
  exit 1
  ;;
esac

case "${1:-}" in
'' | get)
  GetVolume
  exit 0
  ;;
set)
  shift 1
  if [[ -z "${1:-}" ]]; then
    echo "Missing target value"
    exit 1
  fi
  SetVolume "$1"
  exit 0
  ;;
mute)
  wpctl set-mute $TARGET toggle
  exit 0
  ;;
*)
  echo "Unknown command '$1', see --help for more information"
  exit 1
  ;;
esac
